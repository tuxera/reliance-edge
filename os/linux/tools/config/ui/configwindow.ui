<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>ConfigWindow</class>
 <widget class="QMainWindow" name="ConfigWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>370</width>
    <height>553</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="windowTitle">
   <string>Reliance Edge Configuration Utility</string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <layout class="QVBoxLayout" name="verticalLayout">
    <property name="leftMargin">
     <number>0</number>
    </property>
    <property name="topMargin">
     <number>0</number>
    </property>
    <property name="rightMargin">
     <number>0</number>
    </property>
    <property name="bottomMargin">
     <number>0</number>
    </property>
    <item>
     <widget class="QTabWidget" name="tabWidget">
      <property name="tabShape">
       <enum>QTabWidget::Rounded</enum>
      </property>
      <property name="currentIndex">
       <number>0</number>
      </property>
      <widget class="QWidget" name="tabGeneral">
       <attribute name="title">
        <string>General</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_2">
        <property name="leftMargin">
         <number>0</number>
        </property>
        <property name="topMargin">
         <number>0</number>
        </property>
        <property name="rightMargin">
         <number>0</number>
        </property>
        <property name="bottomMargin">
         <number>0</number>
        </property>
        <item>
         <widget class="QScrollArea" name="scrollAreaGeneral">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="sawcGeneral">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>-233</y>
             <width>381</width>
             <height>724</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_11">
            <item>
             <widget class="QGroupBox" name="gbReadonly">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
                <horstretch>0</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="minimumSize">
               <size>
                <width>0</width>
                <height>0</height>
               </size>
              </property>
              <property name="title">
               <string>Readonly</string>
              </property>
              <property name="alignment">
               <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_4">
               <item>
                <widget class="QCheckBox" name="cbReadonly">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;If enabled, this option disables all write APIs and all the code that exists to support writing to the file system. It will still be possible to read from the file system, but not to write anything. If selected, the configuration utility will automatically gray-out numerous options which are no longer relevant.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; This setting exists to allow Reliance Edge to be built for environments that do not need to write, like boot-loaders. Most of the time this should be left unchecked.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Enable readonly configuration</string>
                 </property>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="gbApi">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
                <horstretch>0</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="title">
               <string>File Access API</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_3">
               <item>
                <layout class="QHBoxLayout" name="hlayApiRbtns">
                 <item>
                  <widget class="QRadioButton" name="rbtnUsePosix">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;Reliance Edge provides two mutually exclusive file system APIs: the POSIX-like API and the File System Essentials API. This setting indicates your application will be using the POSIX-like API.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; See the POSIX-Like API Guide for a discussion of this API and the API documentation for the list of POSIX-like APIs. Most users will use the POSIX-like API since it is familiar and provides the most features. However, users looking for a smaller and simpler API might consider the File System Essentials API; see the File System Essentials API Guide for a discussion of when the Essentials API might be appropriate.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Use POSIX API</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_17">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>4</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QRadioButton" name="rbtnUseFse">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;Reliance Edge provides two mutually exclusive file system APIs: the POSIX-like API and the File System Essentials API. This setting indicates your application will be using the Essentials API.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; See the File System Essentials API Guide for a discussion of this API (including reasons why you might use it instead of the POSIX-like API) and the API documentation for the list of the Essentials APIs.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Use File System Essentials API</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_14">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnApiRbtns" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="QFrame" name="framePosixOps">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="frameShape">
                  <enum>QFrame::StyledPanel</enum>
                 </property>
                 <property name="frameShadow">
                  <enum>QFrame::Raised</enum>
                 </property>
                 <layout class="QVBoxLayout" name="verticalLayout_5">
                  <property name="topMargin">
                   <number>0</number>
                  </property>
                  <property name="bottomMargin">
                   <number>0</number>
                  </property>
                  <item>
                   <widget class="QLabel" name="label">
                    <property name="text">
                     <string>Enabled operations:</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="horizontalLayout_4">
                    <item>
                     <layout class="QVBoxLayout" name="verticalLayout_9">
                      <item>
                       <layout class="QHBoxLayout" name="horizontalLayout">
                        <item>
                         <widget class="QCheckBox" name="cbPosixFormat">
                          <property name="toolTip">
                           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether the red_format() API will be available.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to format or reformat the storage media on the target, enable this setting; otherwise, disable it to reduce code size. Often the media is formatted only once, when the system is &amp;quot;flashed&amp;quot;, and never again; in this case there is no need for red_format(). Enabling red_format() will be required to run most of the tests provided with Reliance Edge.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                          </property>
                          <property name="text">
                           <string>format</string>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </item>
                      <item>
                       <layout class="QHBoxLayout" name="horizontalLayout_2">
                        <item>
                         <widget class="QCheckBox" name="cbPosixLink">
                          <property name="toolTip">
                           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This setting determines whether the red_link() API will be available.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to create hard links in your application, enable this setting; otherwise, disable it to reduce code size.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                          </property>
                          <property name="text">
                           <string>link</string>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </item>
                      <item>
                       <layout class="QHBoxLayout" name="horizontalLayout_3">
                        <item>
                         <widget class="QCheckBox" name="cbPosixUnlink">
                          <property name="toolTip">
                           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether the red_unlink() API will be available.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to delete files in your application, enable this setting; otherwise, disable it to reduce code size. red_unlink() shares most of its code with red_rmdir(), so the difference in code size is small unless both APIs are enabled or disabled.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                          </property>
                          <property name="text">
                           <string>unlink</string>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </item>
                      <item>
                       <layout class="QHBoxLayout" name="horizontalLayout_5">
                        <item>
                         <widget class="QCheckBox" name="cbPosixMkdir">
                          <property name="toolTip">
                           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This setting determines whether the red_mkdir() API will be available.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to create directories in your application, enable this setting; otherwise, disable it to reduce code size.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                          </property>
                          <property name="text">
                           <string>mkdir</string>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </item>
                      <item>
                       <layout class="QHBoxLayout" name="horizontalLayout_11">
                        <item>
                         <widget class="QCheckBox" name="cbPosixRmDir">
                          <property name="toolTip">
                           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether the red_rmdir() API will be available.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to delete directories in your application, enable this setting; otherwise, disable it to reduce code size. red_rmdir() shares most of its code with red_unlink(), so the difference in code size is small unless both APIs are enabled or disabled.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                          </property>
                          <property name="text">
                           <string>rmdir</string>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </item>
                     </layout>
                    </item>
                    <item>
                     <layout class="QVBoxLayout" name="verticalLayout_8">
                      <item>
                       <widget class="QFrame" name="framePosixRenames">
                        <layout class="QVBoxLayout" name="vlayPosixRenames">
                         <property name="leftMargin">
                          <number>0</number>
                         </property>
                         <property name="topMargin">
                          <number>0</number>
                         </property>
                         <property name="rightMargin">
                          <number>0</number>
                         </property>
                         <property name="bottomMargin">
                          <number>0</number>
                         </property>
                         <item>
                          <layout class="QHBoxLayout" name="horizontalLayout_14">
                           <item>
                            <widget class="QCheckBox" name="cbPosixRename">
                             <property name="toolTip">
                              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether the red_rename() API will be available.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you need to rename files or directories in your application, enable this setting; otherwise, disable it to reduce code size and memory usage. red_rename() substantially increases the minimum number of block buffers (the increase is between 3 and 6 block size buffers, depending on other settings), thereby increasing the amount of RAM needed to use Reliance Edge. Therefore it is recommended to disable this setting unless red_rename() is actually needed.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                             </property>
                             <property name="text">
                              <string>rename</string>
                             </property>
                            </widget>
                           </item>
                          </layout>
                         </item>
                         <item>
                          <layout class="QHBoxLayout" name="horizontalLayout_24">
                           <property name="spacing">
                            <number>0</number>
                           </property>
                           <property name="leftMargin">
                            <number>20</number>
                           </property>
                           <item>
                            <widget class="QCheckBox" name="cbPosixAtomicRename">
                             <property name="toolTip">
                              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This setting determines whether red_rename() will support atomic rename functionality, as described in its documentation.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you want to replace a file with another file, one method is to red_unlink() the original file and red_rename() the new file to have the same name as the original file. But there are several things that could go wrong: it leaves an interval where the file does not exist with its original name, and if another task tries to open it, the open will fail; if another task commits a transaction point, a transacted state could be created where the original file does not exist, which could possibly cause problems if power is lost and the file is missing after reboot; or the rename could fail, and the original file would have been deleted without a replacement. Atomic rename allows red_rename() to rename onto an existing file, removing the need for the red_unlink() and guaranteeing that the file will exist with either its old or new contents. If this sounds like a useful feature for your application, enable this setting; otherwise, disable it to reduce code size and decrease the minimum block buffer count by one.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                             </property>
                             <property name="text">
                              <string>atomic rename</string>
                             </property>
                            </widget>
                           </item>
                          </layout>
                         </item>
                        </layout>
                       </widget>
                      </item>
                      <item>
                       <layout class="QHBoxLayout" name="horizontalLayout_17">
                        <item>
                         <widget class="QCheckBox" name="cbPosixFtruncate">
                          <property name="toolTip">
                           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether truncation functionality will be available, namely the red_ftruncate() API and the RED_O_TRUNC flag for red_open().&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to truncate files in your application, enable this setting; otherwise, disable it to reduce code size.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                          </property>
                          <property name="text">
                           <string>ftruncate</string>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </item>
                      <item>
                       <layout class="QHBoxLayout" name="horizontalLayout_18">
                        <item>
                         <widget class="QCheckBox" name="cbPosixDirOps">
                          <property name="toolTip">
                           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This setting determines whether the red_opendir(), red_readdir(), red_rewinddir(), and red_closedir() APIs will be available.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance: &lt;/span&gt;If you plan to enumerate the contents of a directory in your application, enable this setting; otherwise, disable it to reduce code size and reduce the amount of memory needed for each file system handle (see Handle Count). red_readdir() is useful for discovering the contents of a directory, and for writing code which parses directories recursively, but most embedded applications will not need it.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                          </property>
                          <property name="text">
                           <string>Directory operations</string>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </item>
                      <item>
                       <spacer name="verticalSpacer">
                        <property name="orientation">
                         <enum>Qt::Vertical</enum>
                        </property>
                        <property name="sizeType">
                         <enum>QSizePolicy::Fixed</enum>
                        </property>
                        <property name="sizeHint" stdset="0">
                         <size>
                          <width>10</width>
                          <height>17</height>
                         </size>
                        </property>
                       </spacer>
                      </item>
                     </layout>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <widget class="QWidget" name="hwiFileNameLen" native="true">
                    <property name="minimumSize">
                     <size>
                      <width>0</width>
                      <height>10</height>
                     </size>
                    </property>
                    <layout class="QHBoxLayout" name="horizontalLayout_6">
                     <property name="leftMargin">
                      <number>0</number>
                     </property>
                     <property name="topMargin">
                      <number>0</number>
                     </property>
                     <property name="rightMargin">
                      <number>0</number>
                     </property>
                     <property name="bottomMargin">
                      <number>0</number>
                     </property>
                     <item>
                      <widget class="QLabel" name="label_3">
                       <property name="toolTip">
                        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This determines the maximum length for a file or directory name; it is equivalent to the NAME_MAX macro in POSIX.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; For efficient, compact directories, this should be kept as small as possible. Directory entries have a fixed size, so all names consume the same amount of directory space as the maximum-length name. If your application code has already been written, it is reasonable to search your application for the longest file name, and use that; or if you previously used a FAT file system without long file names, you can set this to 12 (sufficient for 8.3 names). Internally, directory entry sizes must be a multiple of four; if the maximum name length is not divisible by four, directory entries will be padded with unused bytes. To avoid this padding, use a name length which is divisible by four. The maximum legal name length is block size minus 4, but using such large names is not recommended.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                       </property>
                       <property name="text">
                        <string>Maximum file name length:</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QSpinBox" name="sbFileNameLen">
                       <property name="maximum">
                        <number>65535</number>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QLabel" name="label_4">
                       <property name="text">
                        <string>chars</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <spacer name="horizontalSpacer">
                       <property name="orientation">
                        <enum>Qt::Horizontal</enum>
                       </property>
                       <property name="sizeHint" stdset="0">
                        <size>
                         <width>40</width>
                         <height>20</height>
                        </size>
                       </property>
                      </spacer>
                     </item>
                     <item>
                      <widget class="WarningBtn" name="wbtnFileNameLen" native="true">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>0</width>
                         <height>18</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>18</width>
                         <height>18</height>
                        </size>
                       </property>
                      </widget>
                     </item>
                    </layout>
                   </widget>
                  </item>
                  <item>
                   <widget class="QWidget" name="hwiPathChar" native="true">
                    <property name="minimumSize">
                     <size>
                      <width>0</width>
                      <height>10</height>
                     </size>
                    </property>
                    <layout class="QHBoxLayout" name="horizontalLayout_7">
                     <property name="leftMargin">
                      <number>0</number>
                     </property>
                     <property name="topMargin">
                      <number>0</number>
                     </property>
                     <property name="rightMargin">
                      <number>0</number>
                     </property>
                     <property name="bottomMargin">
                      <number>0</number>
                     </property>
                     <item>
                      <widget class="QLabel" name="label_5">
                       <property name="toolTip">
                        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This is the character which will separate names in a path. For example, if set to / , then a path like foo/bar means foo is a directory and bar is a file or subdirectory within foo .&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; This is usually / (for Unix-style paths) or \ (for DOS- or Windows-style paths); both these options are provided in the drop-down menu. Alternate path separator characters can be entered if &amp;quot;Custom&amp;quot; is selected from the down-down. For example, you could set the path separator to : (like classic Mac OS) or . (like VMS or RISC OS). If your application code has been written, it is reasonable to use whatever separator your application is already using. The default choice of / has the advantage of being the same as POSIX and unlike \ it does not need to be escaped in a C string (as in &amp;quot;C:\\foo\\bar&amp;quot; to yield C:\foo\bar ).&lt;/p&gt;&lt;p&gt;For simplicity reasons, having multiple path separator characters is not supported; you cannot mix / and \ in your application.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                       </property>
                       <property name="text">
                        <string>Path separator character:</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QComboBox" name="cmbPathChar">
                       <item>
                        <property name="text">
                         <string>/</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>\</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>Custom</string>
                        </property>
                       </item>
                      </widget>
                     </item>
                     <item>
                      <widget class="QLineEdit" name="lePathCharCustom">
                       <property name="enabled">
                        <bool>true</bool>
                       </property>
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                         <horstretch>1</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>40</width>
                         <height>0</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>40</width>
                         <height>16777215</height>
                        </size>
                       </property>
                       <property name="text">
                        <string notr="true"/>
                       </property>
                       <property name="maxLength">
                        <number>6</number>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <spacer name="horizontalSpacer_2">
                       <property name="orientation">
                        <enum>Qt::Horizontal</enum>
                       </property>
                       <property name="sizeType">
                        <enum>QSizePolicy::Expanding</enum>
                       </property>
                       <property name="sizeHint" stdset="0">
                        <size>
                         <width>40</width>
                         <height>20</height>
                        </size>
                       </property>
                      </spacer>
                     </item>
                     <item>
                      <widget class="WarningBtn" name="wbtnPathChar" native="true">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>0</width>
                         <height>18</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>18</width>
                         <height>18</height>
                        </size>
                       </property>
                      </widget>
                     </item>
                    </layout>
                   </widget>
                  </item>
                  <item>
                   <widget class="QWidget" name="hwiHandleCount" native="true">
                    <property name="minimumSize">
                     <size>
                      <width>0</width>
                      <height>10</height>
                     </size>
                    </property>
                    <layout class="QHBoxLayout" name="horizontalLayout_9">
                     <property name="leftMargin">
                      <number>0</number>
                     </property>
                     <property name="topMargin">
                      <number>0</number>
                     </property>
                     <property name="rightMargin">
                      <number>0</number>
                     </property>
                     <property name="bottomMargin">
                      <number>0</number>
                     </property>
                     <item>
                      <widget class="QLabel" name="label_7">
                       <property name="toolTip">
                        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This determines the number of file system handles that will be available. This total is shared among all file system volumes. A &amp;quot;handle&amp;quot; is a file descriptor (as returned by red_open()) or a directory stream (as returned by red_opendir()). Each allocated handle is available for either purpose (file descriptor or directory stream), but not at the same time.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; The number of handles needs to be sufficient for the needs of your application. For example, if your application never opens more than three handles at once, this can be set to three. There is little harm in having too many handles; the main drawback is wasted memory. Handles are not very big. If the Read Directory APIs is enabled, each handle is about 40–60 bytes (depending on other settings) plus the maximum name length; if that setting is disabled, the handles are about 16 bytes each.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                       </property>
                       <property name="text">
                        <string>Handle count:</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QSpinBox" name="sbHandleCount">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>90</width>
                         <height>0</height>
                        </size>
                       </property>
                       <property name="minimum">
                        <number>1</number>
                       </property>
                       <property name="maximum">
                        <number>4096</number>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <spacer name="horizontalSpacer_4">
                       <property name="orientation">
                        <enum>Qt::Horizontal</enum>
                       </property>
                       <property name="sizeHint" stdset="0">
                        <size>
                         <width>40</width>
                         <height>20</height>
                        </size>
                       </property>
                      </spacer>
                     </item>
                     <item>
                      <widget class="WarningBtn" name="wbtnHandleCount" native="true">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>0</width>
                         <height>18</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>18</width>
                         <height>18</height>
                        </size>
                       </property>
                      </widget>
                     </item>
                    </layout>
                   </widget>
                  </item>
                 </layout>
                </widget>
               </item>
               <item>
                <widget class="QFrame" name="frameFseOps">
                 <property name="frameShape">
                  <enum>QFrame::StyledPanel</enum>
                 </property>
                 <property name="frameShadow">
                  <enum>QFrame::Raised</enum>
                 </property>
                 <layout class="QVBoxLayout" name="verticalLayout_12">
                  <property name="topMargin">
                   <number>0</number>
                  </property>
                  <property name="bottomMargin">
                   <number>0</number>
                  </property>
                  <item>
                   <widget class="QLabel" name="label_2">
                    <property name="text">
                     <string>Enabled operations:</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbFseFormat">
                    <property name="toolTip">
                     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether the RedFseFormat() API will be available.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to format or reformat the storage media on the target, enable this setting; otherwise, disable it to reduce code size. Often the media is formatted only once, when the system is &amp;quot;flashed&amp;quot;, and never again; in this case there is no need for RedFseFormat(). Enabling RedFseFormat() will be required to run most of the tests provided with Reliance Edge.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                    </property>
                    <property name="text">
                     <string>Format</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbFseTruncate">
                    <property name="toolTip">
                     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether the RedFseTruncate() API will be available.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance: &lt;/span&gt;If you plan to truncate files in your application, enable this setting; otherwise, disable it to reduce code size. Note that since the Essentials API does not support deletion, truncating data is the only way to free space, so most applications will want this enabled.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                    </property>
                    <property name="text">
                     <string>Truncate</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbFseGetMask">
                    <property name="toolTip">
                     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This setting determines whether the RedFseTransMaskGet() API will be available.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance: &lt;/span&gt;If you plan to retrieve the transaction mask at run-time in your application, enable this setting; otherwise, disable it to reduce code size.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                    </property>
                    <property name="text">
                     <string>Get transaction mask</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbFseSetMask">
                    <property name="toolTip">
                     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether the RedFseTransMaskSet() API will be available.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to change the transaction mask at run-time in your application, enable this setting; otherwise, disable it to reduce code size.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                    </property>
                    <property name="text">
                     <string>Set transaction mask</string>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="groupBox">
              <property name="title">
               <string>File Access Tasks</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_7">
               <item>
                <widget class="QWidget" name="hwiTaskCount" native="true">
                 <property name="minimumSize">
                  <size>
                   <width>0</width>
                   <height>0</height>
                  </size>
                 </property>
                 <layout class="QHBoxLayout" name="horizontalLayout_16">
                  <property name="leftMargin">
                   <number>0</number>
                  </property>
                  <property name="topMargin">
                   <number>0</number>
                  </property>
                  <property name="rightMargin">
                   <number>0</number>
                  </property>
                  <property name="bottomMargin">
                   <number>0</number>
                  </property>
                  <item>
                   <widget class="QLabel" name="label_19">
                    <property name="toolTip">
                     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This determines the number of file system tasks supported by the driver. It must be large enough for every task which will ever use the file system; not just the number which will use it at any given time. If set to 1, all mutex code is conditioned out and there is no protection against multiple tasks entering the file system.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If your system is a simple environment without tasks (only one thread of execution), then this can safely be set to 1. If you know you have (for example) four tasks which will be calling into Reliance Edge, you can set this to four. Note that if you set the task count to 1, all locking is removed; if you do so and multiple tasks erroneously use Reliance Edge, this will go undetected and lead to race conditions which can corrupt the file system. So if your system has multiple tasks, only one of which uses the file system, it might be a good idea to set the task count to 2, to preserve the locking.&lt;/p&gt;&lt;p&gt;If using the POSIX-like API, the task count is also used to allocate an array of per-task information, primarily for red_errno. Since there are only so many task slots available, an error will be returned if too many tasks attempt to use Reliance Edge. For example, if the task count is set to four, and five tasks attempt to use Reliance Edge, the fifth task will be denied access. Thus, care should be taken to make sure the task count is accurate. If the task count is set to 1, in addition to removing all locking, red_errno is no longer stored on a per-task basis.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                    </property>
                    <property name="text">
                     <string>Maximum task count:</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="sbTaskCount">
                    <property name="sizePolicy">
                     <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                      <horstretch>0</horstretch>
                      <verstretch>0</verstretch>
                     </sizepolicy>
                    </property>
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>0</height>
                     </size>
                    </property>
                    <property name="minimum">
                     <number>1</number>
                    </property>
                    <property name="maximum">
                     <number>2147483647</number>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <spacer name="horizontalSpacer_13">
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                    <property name="sizeHint" stdset="0">
                     <size>
                      <width>40</width>
                      <height>20</height>
                     </size>
                    </property>
                   </spacer>
                  </item>
                  <item>
                   <widget class="WarningBtn" name="wbtnTaskCount" native="true">
                    <property name="sizePolicy">
                     <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                      <horstretch>0</horstretch>
                      <verstretch>0</verstretch>
                     </sizepolicy>
                    </property>
                    <property name="minimumSize">
                     <size>
                      <width>0</width>
                      <height>18</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>18</width>
                      <height>18</height>
                     </size>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="gbDebugging">
              <property name="title">
               <string>Debugging</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_27">
               <item>
                <widget class="QCheckBox" name="cbEnableOutput">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether to enable text output, namely RedOsOutputString() and its test code front-ends such as RedPrintf().&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If enabled, the Reliance Edge file system driver will print a sign-on message when first initialized, and print notifications after certain critical errors (such as I/O failures). If these seem like userful features, and RedOsOutput-String() has been implemented, enable the setting. Test code also uses RedOsOutputString() (mainly via the RedPrintf() front-end, which is similar to printf()), so enabling this setting is necessary to use the tests.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Enable text output</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QCheckBox" name="cbProcessAsserts">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This setting determines whether to process assertions. If enabled, Reliance Edge will include assertions which invoke the user-implemented RedOsAssertFail() function when an assertion fails. If disabled, assertions are reduced to no-ops which generate no code.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; Enable assertions during testing and debugging in order to make sure that the code is not encountering situations it did not expect. Enabling assertions will increase the code size and slightly decrease the performance. Assertions are traditionally disabled for release builds, but this is not required; some engineers advocate leaving assertions enabled, so that problems in the field can be more easily caught and diagnosed. For additional discussion of assertions, see the assertion handling section of the Porting Guide chapter.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Process asserts</string>
                 </property>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <spacer name="verticalSpacer_5">
              <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="tabVolumes">
       <attribute name="title">
        <string>Volumes</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_13">
        <property name="leftMargin">
         <number>0</number>
        </property>
        <property name="topMargin">
         <number>0</number>
        </property>
        <property name="rightMargin">
         <number>0</number>
        </property>
        <property name="bottomMargin">
         <number>0</number>
        </property>
        <item>
         <widget class="QScrollArea" name="scrollArea_2">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_2">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>380</width>
             <height>476</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_14">
            <item>
             <widget class="QGroupBox" name="gbBlockSize">
              <property name="title">
               <string>Global Settings</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_17">
               <item>
                <layout class="QHBoxLayout" name="hlayBlockSize">
                 <item>
                  <widget class="QLabel" name="label_15">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; The block size is the unit of allocation for file data and metadata. All read and write requests issued against the storage media are always at least a block in size. A single block size is shared by all Reliance Edge volumes.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; The value chosen for the block size is important due to its impact on memory usage, performance, and file system limits. Smaller block sizes use less memory; while larger block sizes tend to yield better performance and larger maximum file and volume sizes (see the Limits section for details on those maximums).&lt;/p&gt;&lt;p&gt;Reliance Edge needs a certain number of block buffers in order to operate; as the name implies, each block buffer consumes a block sized chunk of memory. So if the block size is doubled, and the Block Buffer Count is not modified, the amount of memory used by Reliance Edge will almost double. Thus, given that the number of block buffers cannot be decreased below a certain point, the block size is a key variable dictating how much memory Reliance Edge will use.&lt;/p&gt;&lt;p&gt;The minimum value for the block size is the sector size; to be precise, the block size must be larger than the sector size of every volume. But setting the block size to a value larger than the sector size can yield improved performance. For example, on many types of managed flash media (such as many SD cards and eMMC devices), the sector size is 512 bytes; but internally, the media uses 2048, 4096, or 8192 byte pages, and writes smaller than that, including 512 byte sector writes, are slow. On such media, using a block size that is at least as large as the internal media page size will improve performance.&lt;/p&gt;&lt;p&gt;There are also disadvantages to using a block size which is too large. If the application writes one byte, this will be increased to a block sized write: and on some types of media, writing a 512 byte block will be faster than a 4096 byte block. Another problem with larger block sizes is internal fragmentation: assuming there are direct pointers in the inode, a one-byte file will consume 512 bytes of disk space if the block size is 512 (for 511 wasted bytes), or 4096 bytes of disk space if the block size is 4096 (for 4095 wasted bytes). So smaller block sizes make better use of disk space, especially if there are lots of small files. For these reasons, in addition to high memory usage, block sizes above 8192 are uncommon.&lt;/p&gt;&lt;p&gt;In summary, setting the block size to the sector size is usually a good starting point; but if using flash media, setting it to the page size (or a decent guess at the page size) will improve performance and is usually worth it unless memory usage is a concern. If performance is not good enough, experimenting with other block sizes is a good starting point.&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Block size:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QComboBox" name="cmbBlockSize">
                   <item>
                    <property name="text">
                     <string>256</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>512</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>1,024</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>2,048</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>4,096</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>8,192</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>16,384</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>32,768</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>65,536</string>
                    </property>
                   </item>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="label_16">
                   <property name="text">
                    <string>bytes</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_10">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnBlockSize" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="gbVolumes">
              <property name="title">
               <string>Volumes</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_18">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_10">
                 <item>
                  <widget class="QListWidget" name="listVolumes">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Expanding">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>80</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>140</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <layout class="QVBoxLayout" name="verticalLayout_15">
                   <item>
                    <layout class="QHBoxLayout" name="hlayPathPrefix">
                     <item>
                      <widget class="QLabel" name="label_8">
                       <property name="toolTip">
                        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting names the volume and provides a prefix that is used in paths. For example, if the path prefix is &amp;quot;VOL0:&amp;quot;, that string would be used with APIs that operate on a volume (like red_mount()), and &amp;quot;VOL0:/foo/bar&amp;quot; would be a path on that volume (assuming '/' is the path separator character). Or, if there are two volumes with prefixes &amp;quot;/system&amp;quot; and &amp;quot;/data&amp;quot;, then &amp;quot;/system/foo/bar&amp;quot; and &amp;quot;/data/foo/bar&amp;quot; would be paths on those volumes.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; The exact identifier to use for a path prefix is a matter of preference. An empty string is a valid path prefix; if the system only has one volume, an empty prefix is a good choice since it avoids the need to prefix all the paths. For more discussion of path prefixes, see the Path Prefixes section.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                       </property>
                       <property name="text">
                        <string>Volume name (path prefix):</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QLineEdit" name="lePathPrefix"/>
                     </item>
                     <item>
                      <spacer name="horizontalSpacer_6">
                       <property name="orientation">
                        <enum>Qt::Horizontal</enum>
                       </property>
                       <property name="sizeHint" stdset="0">
                        <size>
                         <width>40</width>
                         <height>20</height>
                        </size>
                       </property>
                      </spacer>
                     </item>
                     <item>
                      <widget class="WarningBtn" name="wbtnPathPrefix" native="true">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>0</width>
                         <height>0</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>18</width>
                         <height>16777215</height>
                        </size>
                       </property>
                      </widget>
                     </item>
                    </layout>
                   </item>
                   <item>
                    <layout class="QHBoxLayout" name="hlaySectorSize">
                     <item>
                      <widget class="QLabel" name="label_17">
                       <property name="toolTip">
                        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This is the sector size of the storage medium underlying the volume being configured. The sector size is the unit for reads and writes to the storage medium; while the file system allocates in terms of blocks, the block numbers and counts are converted to sector numbers and counts before being passed into the block device service.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; The correct value here is the sector size of the storage medium. For example, if the storage medium underlying the volume has 512 byte sectors, this should be set to 512. The most common value here will be 512. If implementing a RAM disk, the sector size can be set to 1 so that the sector numbers and counts serve as byte offsets and lengths.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                       </property>
                       <property name="text">
                        <string>Sector size:</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QComboBox" name="cmbSectorSize">
                       <item>
                        <property name="text">
                         <string>256</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>512</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>1,024</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>2,048</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>4,096</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>8,192</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>16,384</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>32,768</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>65,536</string>
                        </property>
                       </item>
                      </widget>
                     </item>
                     <item>
                      <widget class="QLabel" name="label_18">
                       <property name="text">
                        <string>bytes</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <spacer name="horizontalSpacer_11">
                       <property name="orientation">
                        <enum>Qt::Horizontal</enum>
                       </property>
                       <property name="sizeHint" stdset="0">
                        <size>
                         <width>40</width>
                         <height>20</height>
                        </size>
                       </property>
                      </spacer>
                     </item>
                     <item>
                      <widget class="WarningBtn" name="wbtnSectorSize" native="true">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>0</width>
                         <height>0</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>18</width>
                         <height>16777215</height>
                        </size>
                       </property>
                      </widget>
                     </item>
                    </layout>
                   </item>
                   <item>
                    <layout class="QVBoxLayout" name="vlayVolSize">
                     <property name="spacing">
                      <number>0</number>
                     </property>
                     <item>
                      <layout class="QHBoxLayout" name="horizontalLayout_12">
                       <item>
                        <widget class="QLabel" name="label_9">
                         <property name="toolTip">
                          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This is the size of the volume, in units of sectors.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; To set this value correctly, you need to know the exact size of your storage media. For example, if your medium is an SD card which is about 2 GB and you assume the sector count is 4194304, this will result in errors if the SD card is actually 1.86 GB with 3900702 sectors. This information may be available in the datasheet for your storage medium; with SD and eMMC, the sector count can be derived from values in the CSD (Card-Specific Data) register.&lt;/p&gt;&lt;p&gt;If you can connect your storage medium to a Linux machine, fdisk -lu /dev/FOO (where FOO is replaced with the device or partition name) will print the sector count.&lt;/p&gt;&lt;p&gt;If you can connect your storage medium to a Windows machine, wmic partition get BlockSize, Name, NumberOfBlocks will report the size of every partition of every disk. The &amp;quot;NumberOfBlocks&amp;quot; is reported in terms of &amp;quot;BlockSize&amp;quot; (which is usually 512; if this does not match the true sector size of the media, scale the &amp;quot;NumberOfBlocks&amp;quot; value accordingly). The output of wmic names each disk by number (e.g., &amp;quot;Disk #6&amp;quot;); you can use the &amp;quot;Disk Management&amp;quot; utility (available from the Control Panel) to figure out which disk numbers corresponds to which drive letters.&lt;/p&gt;&lt;p&gt;Sometimes the reported sizes will be inaccurate, and sectors near the end of the media will fail to read or write with I/O errors. It is prudent to test your media to ensure that all the sectors can be read and written without error (for example, on Linux this could be done with dd ).&lt;/p&gt;&lt;p&gt;If you tell Reliance Edge that the media has fewer sectors than it really does, things will work correctly—the only drawback is that the unreported sectors will be unusable.&lt;/p&gt;&lt;p&gt;If you are using partitioning on your storage media, then the sector count should be the size of the partion which will underlie the volume, rather than the size of the entire storage device.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                         </property>
                         <property name="text">
                          <string>Volume size:</string>
                         </property>
                        </widget>
                       </item>
                       <item>
                        <widget class="QSpinBox" name="sbVolSize">
                         <property name="sizePolicy">
                          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                           <horstretch>1</horstretch>
                           <verstretch>0</verstretch>
                          </sizepolicy>
                         </property>
                         <property name="minimumSize">
                          <size>
                           <width>100</width>
                           <height>0</height>
                          </size>
                         </property>
                         <property name="minimum">
                          <number>5</number>
                         </property>
                         <property name="maximum">
                          <number>2147483647</number>
                         </property>
                        </widget>
                       </item>
                       <item>
                        <widget class="QLabel" name="label_10">
                         <property name="text">
                          <string>sectors</string>
                         </property>
                        </widget>
                       </item>
                       <item>
                        <spacer name="horizontalSpacer_5">
                         <property name="orientation">
                          <enum>Qt::Horizontal</enum>
                         </property>
                         <property name="sizeHint" stdset="0">
                          <size>
                           <width>40</width>
                           <height>20</height>
                          </size>
                         </property>
                        </spacer>
                       </item>
                       <item>
                        <widget class="WarningBtn" name="wbtnVolSize" native="true">
                         <property name="sizePolicy">
                          <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                           <horstretch>0</horstretch>
                           <verstretch>0</verstretch>
                          </sizepolicy>
                         </property>
                         <property name="minimumSize">
                          <size>
                           <width>0</width>
                           <height>0</height>
                          </size>
                         </property>
                         <property name="maximumSize">
                          <size>
                           <width>18</width>
                           <height>16777215</height>
                          </size>
                         </property>
                        </widget>
                       </item>
                      </layout>
                     </item>
                     <item>
                      <layout class="QHBoxLayout" name="horizontalLayout_13">
                       <item>
                        <spacer name="horizontalSpacer_8">
                         <property name="orientation">
                          <enum>Qt::Horizontal</enum>
                         </property>
                         <property name="sizeType">
                          <enum>QSizePolicy::Fixed</enum>
                         </property>
                         <property name="sizeHint" stdset="0">
                          <size>
                           <width>10</width>
                           <height>20</height>
                          </size>
                         </property>
                        </spacer>
                       </item>
                       <item>
                        <widget class="QLabel" name="label_11">
                         <property name="text">
                          <string>=</string>
                         </property>
                        </widget>
                       </item>
                       <item>
                        <widget class="QLabel" name="labelVolSizeBytes">
                         <property name="text">
                          <string>0</string>
                         </property>
                        </widget>
                       </item>
                       <item>
                        <spacer name="horizontalSpacer_7">
                         <property name="orientation">
                          <enum>Qt::Horizontal</enum>
                         </property>
                         <property name="sizeHint" stdset="0">
                          <size>
                           <width>40</width>
                           <height>20</height>
                          </size>
                         </property>
                        </spacer>
                       </item>
                      </layout>
                     </item>
                    </layout>
                   </item>
                   <item>
                    <layout class="QHBoxLayout" name="hlayAtomicWrite">
                     <item>
                      <widget class="QLabel" name="label_20">
                       <property name="toolTip">
                        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This tells the file system driver that when a sector is written to the storage medium underlying the volume, the sector write is atomic. Atomic means that if the sector write is interrupted by power failure, after reboot, the sector being written is absolutely guaranteed to contain either the old contents or the new contents: in other words, the sector write finishes completely or had no effect at all. On media without atomic sector writes, an interrupted sector write might leave the sector with a mix of old and new data; or it might corrupt the contents of the sector entirely.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; Reliance Edge does not require atomic sector writes; it can operate reliably even if interrupting the sector write corrupts the contents of the sector. However, if atomic sector writes are supported, Reliance Edge can enable stronger error checks at mount time, which might catch media corruption errors that would otherwise go unnoticed and perhaps manifest as problems later on. Most modern storage media support atomic sector writes. If unsure, it is safer to assume atomic sector writes are not supported.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                       </property>
                       <property name="text">
                        <string>Atomic sector write:</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QComboBox" name="cmbAtomicWrite">
                       <property name="minimumSize">
                        <size>
                         <width>70</width>
                         <height>0</height>
                        </size>
                       </property>
                       <item>
                        <property name="text">
                         <string>Supported</string>
                        </property>
                       </item>
                       <item>
                        <property name="text">
                         <string>Unsupported</string>
                        </property>
                       </item>
                      </widget>
                     </item>
                     <item>
                      <spacer name="horizontalSpacer_18">
                       <property name="orientation">
                        <enum>Qt::Horizontal</enum>
                       </property>
                       <property name="sizeHint" stdset="0">
                        <size>
                         <width>40</width>
                         <height>20</height>
                        </size>
                       </property>
                      </spacer>
                     </item>
                     <item>
                      <widget class="WarningBtn" name="wbtnAtomicWrite" native="true">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>0</width>
                         <height>0</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>18</width>
                         <height>16777215</height>
                        </size>
                       </property>
                      </widget>
                     </item>
                    </layout>
                   </item>
                   <item>
                    <layout class="QHBoxLayout" name="hlayInodeCount">
                     <item>
                      <widget class="QLabel" name="label_14">
                       <property name="toolTip">
                        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; Every time a file or directory is created, one inode is consumed; when a file or directory is deleted, the inode is freed and available for reuse. Also, when using the POSIX-like API, one inode is consumed by the root directory. So the inode count dictates the maximum number of files and directories that can reside on the volume.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; The number of inodes will depend on how many files and directories will be created on the file system either by your application or during image creation by the Image Builder. Some applications have very fixed use cases (for example, using exactly twelve files with well-defined purposes) which makes it easy to determine this value; use cases where the File System Essentials API is appropriate generally fall into this category. If you have a root file system, you can set the inode count to the number of files and directories in that root file system (including the root directory) plus the number of files and directories created at run-time. You can configure Reliance Edge with more inodes than are actually needed; the only downside is that each inode consumes two blocks of space which cannot be used for anything else.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                       </property>
                       <property name="text">
                        <string>Inode count:</string>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <widget class="QSpinBox" name="sbInodeCount">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                         <horstretch>1</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>100</width>
                         <height>0</height>
                        </size>
                       </property>
                       <property name="minimum">
                        <number>1</number>
                       </property>
                       <property name="maximum">
                        <number>2147483647</number>
                       </property>
                      </widget>
                     </item>
                     <item>
                      <spacer name="horizontalSpacer_9">
                       <property name="orientation">
                        <enum>Qt::Horizontal</enum>
                       </property>
                       <property name="sizeHint" stdset="0">
                        <size>
                         <width>40</width>
                         <height>20</height>
                        </size>
                       </property>
                      </spacer>
                     </item>
                     <item>
                      <widget class="WarningBtn" name="wbtnInodeCount" native="true">
                       <property name="sizePolicy">
                        <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                         <horstretch>0</horstretch>
                         <verstretch>0</verstretch>
                        </sizepolicy>
                       </property>
                       <property name="minimumSize">
                        <size>
                         <width>0</width>
                         <height>0</height>
                        </size>
                       </property>
                       <property name="maximumSize">
                        <size>
                         <width>18</width>
                         <height>16777215</height>
                        </size>
                       </property>
                      </widget>
                     </item>
                    </layout>
                   </item>
                   <item>
                    <layout class="QVBoxLayout" name="vlayVolSize_2">
                     <property name="spacing">
                      <number>0</number>
                     </property>
                     <item>
                      <layout class="QHBoxLayout" name="horizontalLayout_19">
                       <item>
                        <widget class="QCheckBox" name="cbEnableRetries">
                         <property name="toolTip">
                          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; In Reliance Edge, a block device I/O failure is normally a critical error. However, If block I/O retries are enabled, then Reliance Edge will not immediately abort when a read, write, or flush call fails. Instead it will try the same operation again up to the specified number of times before returning an error. The maximum number of times an operation may be attempted is one plus the configured max I/O retries.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; Block device I/O retries should be enabled when Reliance Edge is interfacing with drivers or hardware that are known to fail intermittantly without negative side effects (i.e. the failures do not compromise the device state or any data that has been succesfully written). Datalight has observed such failures while testing SD hardware and drivers on a Freescale Tower board and on an ST Microelectronics STM32 board. If retries are enabled, the ideal maximum number of retries should be found by testing the block device. The likelihood of a sporatic failure should be weighed against the lifespan of the part, the likelihood of a true failure (such as permanent media failure), and other considerations.&lt;/p&gt;&lt;p&gt;If you are unsure whether block I/O retries are necessary for your project, then it is recommended that you leave this feature disabled.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                         </property>
                         <property name="text">
                          <string>Retry block device I/O on failure</string>
                         </property>
                         <property name="checked">
                          <bool>true</bool>
                         </property>
                        </widget>
                       </item>
                       <item>
                        <spacer name="horizontalSpacer_33">
                         <property name="orientation">
                          <enum>Qt::Horizontal</enum>
                         </property>
                         <property name="sizeHint" stdset="0">
                          <size>
                           <width>40</width>
                           <height>20</height>
                          </size>
                         </property>
                        </spacer>
                       </item>
                      </layout>
                     </item>
                     <item>
                      <widget class="QWidget" name="widgetBlockIoRetries" native="true">
                       <layout class="QHBoxLayout" name="hlayBlockIoRetries">
                        <property name="spacing">
                         <number>6</number>
                        </property>
                        <property name="leftMargin">
                         <number>0</number>
                        </property>
                        <property name="topMargin">
                         <number>0</number>
                        </property>
                        <property name="rightMargin">
                         <number>0</number>
                        </property>
                        <property name="bottomMargin">
                         <number>0</number>
                        </property>
                        <item>
                         <spacer name="horizontalSpacer_34">
                          <property name="orientation">
                           <enum>Qt::Horizontal</enum>
                          </property>
                          <property name="sizeType">
                           <enum>QSizePolicy::Fixed</enum>
                          </property>
                          <property name="sizeHint" stdset="0">
                           <size>
                            <width>10</width>
                            <height>20</height>
                           </size>
                          </property>
                         </spacer>
                        </item>
                        <item>
                         <widget class="QLabel" name="label_21">
                          <property name="text">
                           <string>Maximum retries:</string>
                          </property>
                         </widget>
                        </item>
                        <item>
                         <widget class="QSpinBox" name="sbBlockIoRetries">
                          <property name="sizePolicy">
                           <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                            <horstretch>1</horstretch>
                            <verstretch>0</verstretch>
                           </sizepolicy>
                          </property>
                          <property name="minimumSize">
                           <size>
                            <width>100</width>
                            <height>0</height>
                           </size>
                          </property>
                          <property name="maximumSize">
                           <size>
                            <width>16777215</width>
                            <height>16777215</height>
                           </size>
                          </property>
                          <property name="minimum">
                           <number>1</number>
                          </property>
                          <property name="maximum">
                           <number>255</number>
                          </property>
                          <property name="value">
                           <number>2</number>
                          </property>
                         </widget>
                        </item>
                        <item>
                         <spacer name="horizontalSpacer_32">
                          <property name="orientation">
                           <enum>Qt::Horizontal</enum>
                          </property>
                          <property name="sizeHint" stdset="0">
                           <size>
                            <width>40</width>
                            <height>20</height>
                           </size>
                          </property>
                         </spacer>
                        </item>
                        <item>
                         <widget class="WarningBtn" name="wbtnIoRetries" native="true">
                          <property name="sizePolicy">
                           <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                            <horstretch>0</horstretch>
                            <verstretch>0</verstretch>
                           </sizepolicy>
                          </property>
                          <property name="minimumSize">
                           <size>
                            <width>0</width>
                            <height>0</height>
                           </size>
                          </property>
                          <property name="maximumSize">
                           <size>
                            <width>18</width>
                            <height>16777215</height>
                           </size>
                          </property>
                         </widget>
                        </item>
                       </layout>
                      </widget>
                     </item>
                    </layout>
                   </item>
                   <item>
                    <spacer name="verticalSpacer_2">
                     <property name="orientation">
                      <enum>Qt::Vertical</enum>
                     </property>
                     <property name="sizeHint" stdset="0">
                      <size>
                       <width>20</width>
                       <height>40</height>
                      </size>
                     </property>
                    </spacer>
                   </item>
                  </layout>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayVolumeCtrls">
                 <item>
                  <widget class="QPushButton" name="btnAddVol">
                   <property name="text">
                    <string>Add Volume</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QPushButton" name="btnRemoveCurrVol">
                   <property name="text">
                    <string>Remove Selected</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_12">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnVolumeCtrls" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
              </layout>
             </widget>
            </item>
           </layout>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="tabDataStorage">
       <attribute name="title">
        <string>Data</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_16">
        <property name="leftMargin">
         <number>0</number>
        </property>
        <property name="topMargin">
         <number>0</number>
        </property>
        <property name="rightMargin">
         <number>0</number>
        </property>
        <property name="bottomMargin">
         <number>0</number>
        </property>
        <item>
         <widget class="QScrollArea" name="scrollArea_3">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_3">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>364</width>
             <height>491</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_19">
            <item>
             <widget class="QGroupBox" name="gbDataFormat">
              <property name="title">
               <string>Data Storage Format</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_21">
               <item>
                <layout class="QHBoxLayout" name="hlayByteOrder">
                 <item>
                  <widget class="QLabel" name="label_23">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting is used to specify whether the byte order of the target system is little endian or big endian.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; The correct value is determined by your hardware. The majority of embedded systems are little endian. For example, ARM is bi-endian, but uses little endian by default. If this value is set incorrectly, the file system driver will not work: red_init() or RedFseInit() will return an error.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>System byte order:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QComboBox" name="cmbByteOrder">
                   <property name="minimumSize">
                    <size>
                     <width>90</width>
                     <height>0</height>
                    </size>
                   </property>
                   <item>
                    <property name="text">
                     <string>Big endian</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>Little endian</string>
                    </property>
                   </item>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_15">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnByteOrder" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayAlignmentSize">
                 <item>
                  <widget class="QLabel" name="label_25">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This indicates the pointer alignment required to safely and efficiently access a pointer in an &amp;quot;aligned&amp;quot; fashion. In practice, &amp;quot;aligned&amp;quot; means dereferencing a pointer as if it were a pointer to uint32_t. A pointer is assumed to be sufficiently aligned to be accessed in this fashion if its address is evenly divisible by the alignment size.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance: &lt;/span&gt;The default value of 4 will work for most systems (since that is the size of a uint32_t). On some architectures (like x86), an unaligned pointer can be accessed in an aligned fashion, but it is less efficient, so the alignment value should still be set. At this time, this setting is only used by the slice-by-8 CRC algorithm. If you are using an idiosyncratic architecture where the pointer address is not a reliable indicator of pointer alignment, this setting can be ignored and the slice-by-8 CRC algorithm should not be used.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Native alignment size:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QComboBox" name="cmbAlignmentSize">
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <item>
                    <property name="text">
                     <string>1</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>2</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>4</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>8</string>
                    </property>
                   </item>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="label_26">
                   <property name="text">
                    <string>bytes</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_16">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnAlignmentSize" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayCrc">
                 <item>
                  <widget class="QLabel" name="label_31">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; Reliance Edge stores a CRC-32 value in each of its metadata blocks to allow the driver to check for media errors that have corrupted the metadata. There are several CRC algorithms, all of which compute identical CRC values given identical data and are thus equally good at detecting errors; but the different algorithms allow for trade-offs between size and speed.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; The default slice-by-8 algorithm is the fastest and the largest; it computes the CRC in 8-byte slices, taking advantage of the ability of many modern processors to load memory from several locations in parallel. It has the most code and it uses an 8 KB read-only table. If you have enough code space (on your ROM or NOR flash), the slice-by-8 algorithm is recommended since it provides the best performance. The slice-by-8 algorithm also relies on aligned memory access; see notes on Alignment Size.&lt;/p&gt;&lt;p&gt;The Sarwate algorithm is a fairly fast implementation which is much smaller than slice-by-8; it computes the CRC one byte at a time and uses a 1 KB read-only table. If the slice-by-8 algorithm is too big, the Sarwate algorithm is a good choice that provides decent performance in a much smaller package.&lt;/p&gt;&lt;p&gt;The bitwise algorithm is a slow but very small implementation; it computes the CRC one bit at a time and does not use a table. This algorithm is only recommended if space is very limited and Reliance Edge needs to be as small as possible.&lt;/p&gt;&lt;p&gt;Since all three algorithms compute the same CRC result, the CRC algorithm can be changed at any time without breaking media compatibility.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>CRC algorithm:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QComboBox" name="cmbCrc">
                   <item>
                    <property name="text">
                     <string>Bitwise - smallest, slowest</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>Sarwate - midsized, fast</string>
                    </property>
                   </item>
                   <item>
                    <property name="text">
                     <string>Slice by 8 - largest, fastest</string>
                    </property>
                   </item>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_19">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnCrc" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="gbInodeSetting">
              <property name="title">
               <string>Inode Settings</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_23">
               <item>
                <layout class="QHBoxLayout" name="hlayInodeBlockCount">
                 <item>
                  <widget class="QCheckBox" name="cbInodeBlockCount">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether to track the number of data blocks allocated to an inode. Since Reliance Edge supports sparse files (files with unwritten areas that have no data allocated and which read as zeroes), dividing the file size by the block size is not an accurate indicator of how much data is allocated to the inode; this setting enables a field and code to track the number of data blocks actually allocated. This information is made available in the REDSTAT::st_blocks member, returned by red_fstat() (and as an extension, by red_readdir()).&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to use REDSTAT::st_blocks in your application, enable this setting; otherwise, disable it to reduce code size and free up space in the inode.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Enable inode block count</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_31">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnInodeBlockCount" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayInodeTimestamps">
                 <item>
                  <widget class="QCheckBox" name="cbInodeTimestamps">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether to store timestamps with the inode, namely atime (time of last access), mtime (time of last modification), and ctime (time of last status change). If enabled, these timestamps are accessible in the REDSTAT structure. The values assigned to these timestamps rely on RedOsClockGetTime() (see the real-time clock service section for details).&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you plan to use the inode timestamps in your application, or like having them available to support file system analysis, enable this setting; otherwise, disable it to reduce code size and free up space in the inode. If you have not implemented the real-time clock service, there is little point in enabling this setting since the timestamps will always be zero.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Enable inode timestamps</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_26">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnInodeTimestamps" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayUpdateAtime">
                 <item>
                  <spacer name="horizontalSpacer_23">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>10</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QCheckBox" name="cbUpdateAtime">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; This setting determines whether to update the atime (time of last access) timestamp of an inode when it is read. For a file, this would be updated during red_read() or RedFseRead(); for a directory, it would be updated during red_readdir().&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; Keeping atime up-to-date has the disadvantage of adding write operations to read operations—for example, red_read() will include a write to disk, instead of just reads. While disabling this setting reduces POSIX compliance, many systems do so (as with the noatime mount option in Linux). If your application has a need for atime to be kept up-to-date, enable this setting; otherwise, disable it to improve performance and limit writes to the media which may reduce device lifetime.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Update atime on read</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_20">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayDirectPointers">
                 <item>
                  <widget class="QLabel" name="label_33">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; Inodes (file system objects used to implement files and directories) point to data blocks, either directly or indirectly. A greater degree of indirection allows for larger files, while a lesser degree of indirection is more efficient.&lt;/p&gt;&lt;p&gt;Like traditional Unix file systems, Reliance Edge offers a compromise by providing a mix of indirection levels, with lower file offsets having less indirection and higher file offsets having more. Inodes have three pointer types: direct pointers, which store file data block numbers; indirect pointers, which store block numbers of indirect blocks which in turn store file data block numbers; and double indirect pointers, which store block numbers of double indirect blocks which in turn store indirect block numbers.&lt;/p&gt;&lt;p&gt;Unlike other file systems, Reliance Edge allows the number of each pointer type to be configured to allow for different use cases. The number of direct and indirect pointers are configured in these settings, and leftover pointers are designated double indirect pointers.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; These settings are a powerful way to optimize Reliance Edge for your use case. For example, if most of your files are under 20 KB and you have a 1024 byte block size, you can put 20 direct pointers in the inode so that most of your files will read and write very efficiently due to the lack of indirection; the first 20 KB of large files would have the same efficiency improvement, which may be useful for file types with metadata headers that are accessed more often than later areas of the file. Adding indirect pointers allows for more efficient access to midsized files. Each indirect stores (B − 20) /4 data block pointers (where B is the block size); so with a block size of 1024, adding 32 indirect pointers would allow files up to 8 MB to be accessed with only one level of indirection. As described in the Maximum File Sizes section, reducing the amount of indirection in the inode has the effect of reducing the maximum file size; the Info tab in the configuration utility reports the maximum file size with the current settings. If the maximum file size is too small, setting the direct and indirect pointer counts to zero (resulting in an inode which stores nothing but double indirect pointers) will increase the maximum; if it is still too small, then the only option is to increase the block size.&lt;/p&gt;&lt;p&gt;This setting affects directory inodes as well as file inodes. Since directories are usually small, keeping a few direct pointers in the inode is useful for improving the performance of directory operations.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Direct pointers per inode:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="sbDirectPointers">
                   <property name="maximum">
                    <number>65536</number>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_21">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnDirectPointers" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayIndirectPointers">
                 <item>
                  <widget class="QLabel" name="label_34">
                   <property name="text">
                    <string>Indirect pointers per inode:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="sbIndirectPointers">
                   <property name="maximum">
                    <number>65536</number>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_24">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnIndirectPointers" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="hlayDindirPointers">
                 <item>
                  <widget class="QLabel" name="label_50">
                   <property name="text">
                    <string>Remaining entries for double indirect pointers:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="labelDindirPointers">
                   <property name="text">
                    <string>0</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_25">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <spacer name="verticalSpacer_3">
              <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="tabMemory">
       <attribute name="title">
        <string>Memory</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_32">
        <property name="leftMargin">
         <number>0</number>
        </property>
        <property name="topMargin">
         <number>0</number>
        </property>
        <property name="rightMargin">
         <number>0</number>
        </property>
        <property name="bottomMargin">
         <number>0</number>
        </property>
        <item>
         <widget class="QScrollArea" name="scrollArea_4">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_4">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>349</width>
             <height>522</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_24">
            <item>
             <widget class="QGroupBox" name="gbBuffers">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
                <horstretch>0</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="minimumSize">
               <size>
                <width>0</width>
                <height>50</height>
               </size>
              </property>
              <property name="title">
               <string>Buffers</string>
              </property>
              <property name="alignment">
               <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_25">
               <item>
                <widget class="QWidget" name="hwiAllocatedBuffers" native="true">
                 <property name="minimumSize">
                  <size>
                   <width>0</width>
                   <height>10</height>
                  </size>
                 </property>
                 <layout class="QHBoxLayout" name="horizontalLayout_15">
                  <property name="leftMargin">
                   <number>0</number>
                  </property>
                  <property name="topMargin">
                   <number>0</number>
                  </property>
                  <property name="rightMargin">
                   <number>0</number>
                  </property>
                  <property name="bottomMargin">
                   <number>0</number>
                  </property>
                  <item>
                   <widget class="QLabel" name="label_24">
                    <property name="toolTip">
                     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means: &lt;/span&gt;This setting determines the number of block buffers in the block buffer cache.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; Reliance Edge needs a certain minimum number of block buffers in the cache in order to operate. This minimum can be anywhere from 2 to 12, depending on other settings; the configuration utility will require this minimum is met. Using a buffer count above the minimum will improve performance (often substantially) at the cost of using more RAM. Thus, if the performance of Reliance Edge is not satisfactory, increasing the buffer count is a good experiment.&lt;/p&gt;&lt;p&gt;The improvement in performance produced by increasing the buffer count is subject to diminishing returns; if there are already several dozen buffers, adding more will have little effect. The maximum buffer count is 255, but it should be noted that the buffer cache is optimized for a relatively small number of buffers, and that using hundreds of buffers (if such a large amount of RAM is available) may actually decrease performance.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                    </property>
                    <property name="text">
                     <string>Allocated buffers:</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="sbAllocatedBuffers">
                    <property name="maximum">
                     <number>255</number>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <spacer name="horizontalSpacer_22">
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                    <property name="sizeHint" stdset="0">
                     <size>
                      <width>40</width>
                      <height>20</height>
                     </size>
                    </property>
                   </spacer>
                  </item>
                  <item>
                   <widget class="WarningBtn" name="wbtnAllocatedBuffers" native="true">
                    <property name="sizePolicy">
                     <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                      <horstretch>0</horstretch>
                      <verstretch>0</verstretch>
                     </sizepolicy>
                    </property>
                    <property name="minimumSize">
                     <size>
                      <width>18</width>
                      <height>0</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>18</width>
                      <height>16777215</height>
                     </size>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="gbMemFns">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
                <horstretch>0</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="toolTip">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; Reliance Edge needs functions like memcpy() and strlen(), but it also needs to work in freestanding environments where the C library functions might be unavailable. This setting tells Reliance Edge which functions to use: the C library versions, its own implementations, or custom functions. Regardless of which functions are used, Reliance Edge always invokes them via wrapper functions which checks for invalid parameters; for example, there is a RedMemCpy() function which wraps RedMemCpyUnchecked().&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; This function has two presets. The first is to use the standard C library functions, where string.h is included and functions with the standard names (memcpy(), memmove(), strlen(), strcmp(), and so on) are used. This is a reasonable choice if you know that header and those functions are available in your system. The advantage of using the C library functions, if available, is they tend to be optimized, and code size is not increased since those functions were already present on the target.&lt;/p&gt;&lt;p&gt;The second preset is to use Reliance Edge implementations of these functions (see the code in util/memory.c and util/string.c). This has the advantage that it works anywhere, without external dependencies, and these implementations are known not to have any bugs which will cause problems for the file system. The disadvantage is that these are very simple implementations without any optimization, and if these functions are already implemented elsewhere in the system, code size is increased by unnecessarily including two copies of these functions.&lt;/p&gt;&lt;p&gt;The third option allows for customization. For example, perhaps you already wrote versions of these functions for your application; you can tell Reliance Edge to use these same versions, by providing the names and the header file to include. You can also mix-and-match: for example, if you have most of these functions written for your application, but not strncmp(), you can fill out the other text boxes but leave the &amp;quot;Bounded string compare&amp;quot; box empty so that the Reliance Edge implementation of strncmp() will be used.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="title">
               <string>Memory Management Methods</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_26">
               <item>
                <widget class="QRadioButton" name="rbtnMemUseCStd">
                 <property name="text">
                  <string>Use C standard library functions</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="rbtnMemUseReliance">
                 <property name="text">
                  <string>Use Reliance functions</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="rbtnMemCustomize">
                 <property name="text">
                  <string>Customize</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QFrame" name="frameMemFnsCust">
                 <property name="frameShape">
                  <enum>QFrame::StyledPanel</enum>
                 </property>
                 <property name="frameShadow">
                  <enum>QFrame::Raised</enum>
                 </property>
                 <layout class="QVBoxLayout" name="verticalLayout_31">
                  <property name="topMargin">
                   <number>0</number>
                  </property>
                  <property name="bottomMargin">
                   <number>0</number>
                  </property>
                  <item>
                   <layout class="QHBoxLayout" name="hlayMemcpy">
                    <item>
                     <widget class="QLabel" name="label_13">
                      <property name="text">
                       <string>Copy memory: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leMemcpy">
                      <property name="text">
                       <string/>
                      </property>
                     </widget>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayMemmov">
                    <item>
                     <widget class="QLabel" name="label_35">
                      <property name="text">
                       <string>Move memory: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leMemmov"/>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayMemset">
                    <item>
                     <widget class="QLabel" name="label_36">
                      <property name="text">
                       <string>Set memory: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leMemset"/>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayMemcmp">
                    <item>
                     <widget class="QLabel" name="label_39">
                      <property name="text">
                       <string>Compare memory: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leMemcmp"/>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayStrlen">
                    <item>
                     <widget class="QLabel" name="label_38">
                      <property name="text">
                       <string>String length: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leStrlen"/>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayStrcmp">
                    <item>
                     <widget class="QLabel" name="label_42">
                      <property name="text">
                       <string>String compare: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leStrcmp"/>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayStrncmp">
                    <item>
                     <widget class="QLabel" name="label_41">
                      <property name="text">
                       <string>Bounded string compare: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leStrncmp"/>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayStrncpy">
                    <item>
                     <widget class="QLabel" name="label_37">
                      <property name="text">
                       <string>Bounded string copy: </string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leStrncpy"/>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <spacer name="verticalSpacer_8">
                    <property name="orientation">
                     <enum>Qt::Vertical</enum>
                    </property>
                    <property name="sizeType">
                     <enum>QSizePolicy::Fixed</enum>
                    </property>
                    <property name="sizeHint" stdset="0">
                     <size>
                      <width>20</width>
                      <height>5</height>
                     </size>
                    </property>
                   </spacer>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayIncludeFile">
                    <item>
                     <widget class="QLabel" name="label_40">
                      <property name="text">
                       <string>Header file to include:</string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="QLineEdit" name="leIncludeFile"/>
                    </item>
                    <item>
                     <widget class="WarningBtn" name="wbtnIncludeFile" native="true">
                      <property name="sizePolicy">
                       <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                        <horstretch>0</horstretch>
                        <verstretch>0</verstretch>
                       </sizepolicy>
                      </property>
                      <property name="minimumSize">
                       <size>
                        <width>0</width>
                        <height>0</height>
                       </size>
                      </property>
                      <property name="maximumSize">
                       <size>
                        <width>18</width>
                        <height>16777215</height>
                       </size>
                      </property>
                     </widget>
                    </item>
                   </layout>
                  </item>
                 </layout>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <spacer name="verticalSpacer_4">
              <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="tabTransactionPts">
       <attribute name="title">
        <string>Transactions</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_28">
        <property name="leftMargin">
         <number>0</number>
        </property>
        <property name="topMargin">
         <number>0</number>
        </property>
        <property name="rightMargin">
         <number>0</number>
        </property>
        <property name="bottomMargin">
         <number>0</number>
        </property>
        <item>
         <widget class="QScrollArea" name="scrollArea_5">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_5">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>364</width>
             <height>491</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_29">
            <item>
             <widget class="QGroupBox" name="gbTransactionPts">
              <property name="toolTip">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;What it means:&lt;/span&gt; These settings determine which events automatically trigger a transaction point by default; these transaction settings can be changed at run-time by the application. For an explanation of transaction points and automatic transaction points, see How Reliance Edge Works.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Guidance:&lt;/span&gt; If you are unsure, the default automatic transaction events will work fine for most use cases. If your application causes too many transaction points (for example, if it is constantly opening and closing files, and the close automatic transaction point is enabled) then consider turning off the offending event. While there are times where it is useful to disable all transaction points (such as the system update use case), normally this is done at run-time when needed, rather than disabling all automatic transaction points all of the time.&lt;/p&gt;&lt;p&gt;A few notes on specific automatic transaction events:&lt;/p&gt;&lt;p&gt;• Write automatic transactions should usually be disabled. Committing a transaction point every time a file is written to is detrimental to performance and storage media lifetime.&lt;/p&gt;&lt;p&gt;• Volume full automatic transactions should usually be enabled. Reliance Edge can often avoid returning a disk full error by automatically transacting when free space is low; if these automatic transactions are disabled, disk full errors will be returned even when transacting would have freed enough space to have allowed the operation to succeed.&lt;/p&gt;&lt;p&gt;• Volume unmount automatic transactions should usually be enabled. If you unmount without transacting, any changes that have not been transacted are discarded. While this is occasionally a useful feature (it allows the file system to revert to the last committed state), usually a user does not want unmount to change the contents of the file system.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="title">
               <string>Transaction Settings</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_30">
               <item>
                <layout class="QHBoxLayout" name="hlayTransactManual">
                 <item>
                  <widget class="QCheckBox" name="cbTransactManual">
                   <property name="text">
                    <string>Manual transactions only</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="WarningBtn" name="wbtnTransactManual" native="true">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>18</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>18</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="QLabel" name="label_43">
                 <property name="text">
                  <string>Automatic transaction points:</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QFrame" name="frameAutomaticTransactions">
                 <layout class="QVBoxLayout" name="vlayTransactionPtsAuto">
                  <property name="leftMargin">
                   <number>10</number>
                  </property>
                  <property name="topMargin">
                   <number>0</number>
                  </property>
                  <item>
                   <widget class="QCheckBox" name="cbTransactFileCreate">
                    <property name="text">
                     <string>File creation</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactDirCreate">
                    <property name="text">
                     <string>Directory creation</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactRename">
                    <property name="text">
                     <string>Rename</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactLink">
                    <property name="text">
                     <string>Link</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactUnlink">
                    <property name="text">
                     <string>Unlink</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <spacer name="verticalSpacer_9">
                    <property name="orientation">
                     <enum>Qt::Vertical</enum>
                    </property>
                    <property name="sizeType">
                     <enum>QSizePolicy::Fixed</enum>
                    </property>
                    <property name="sizeHint" stdset="0">
                     <size>
                      <width>20</width>
                      <height>6</height>
                     </size>
                    </property>
                   </spacer>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactWrite">
                    <property name="text">
                     <string>Write</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactTruncate">
                    <property name="text">
                     <string>Truncate</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactFSync">
                    <property name="text">
                     <string>File sync</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactClose">
                    <property name="text">
                     <string>Close</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <spacer name="verticalSpacer_7">
                    <property name="orientation">
                     <enum>Qt::Vertical</enum>
                    </property>
                    <property name="sizeType">
                     <enum>QSizePolicy::Fixed</enum>
                    </property>
                    <property name="sizeHint" stdset="0">
                     <size>
                      <width>20</width>
                      <height>6</height>
                     </size>
                    </property>
                   </spacer>
                  </item>
                  <item>
                   <layout class="QHBoxLayout" name="hlayTransactVolFull">
                    <item>
                     <widget class="QCheckBox" name="cbTransactVolFull">
                      <property name="text">
                       <string>Volume full</string>
                      </property>
                     </widget>
                    </item>
                    <item>
                     <widget class="WarningBtn" name="wbtnTransactVolFull" native="true">
                      <property name="sizePolicy">
                       <sizepolicy hsizetype="Fixed" vsizetype="Ignored">
                        <horstretch>0</horstretch>
                        <verstretch>0</verstretch>
                       </sizepolicy>
                      </property>
                      <property name="minimumSize">
                       <size>
                        <width>18</width>
                        <height>0</height>
                       </size>
                      </property>
                      <property name="maximumSize">
                       <size>
                        <width>18</width>
                        <height>16777215</height>
                       </size>
                      </property>
                     </widget>
                    </item>
                   </layout>
                  </item>
                  <item>
                   <widget class="QCheckBox" name="cbTransactVolUnmount">
                    <property name="text">
                     <string>Volume unmount</string>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <spacer name="verticalSpacer_6">
              <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="tabInfo">
       <attribute name="title">
        <string>Limits</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_6">
        <property name="spacing">
         <number>0</number>
        </property>
        <property name="leftMargin">
         <number>0</number>
        </property>
        <property name="topMargin">
         <number>0</number>
        </property>
        <property name="rightMargin">
         <number>0</number>
        </property>
        <property name="bottomMargin">
         <number>0</number>
        </property>
        <item>
         <widget class="QScrollArea" name="scrollArea_6">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_6">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>349</width>
             <height>507</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_10">
            <item>
             <widget class="QGroupBox" name="gbTransactionPts_2">
              <property name="title">
               <string>Maximum File Size</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_34">
               <item>
                <widget class="QLabel" name="label_44">
                 <property name="text">
                  <string>The maximum file size at current settings is:</string>
                 </property>
                </widget>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_20">
                 <item>
                  <spacer name="horizontalSpacer_27">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>10</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QLabel" name="lFsizeBytes">
                   <property name="text">
                    <string>0 MB (0 bytes)</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_28">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="QLabel" name="label_47">
                 <property name="text">
                  <string>The maximum file size is determined by the following values:</string>
                 </property>
                 <property name="wordWrap">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLabel" name="lFsizeDetails">
                 <property name="text">
                  <string>  -  Block size
  -  Block count enabled
  -  Inode timestamps enabled
  -  Selected API
  -  Direct pointer count
  -  Indirect pointer count</string>
                 </property>
                 <property name="wordWrap">
                  <bool>false</bool>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLabel" name="label_46">
                 <property name="text">
                  <string>For more details, see the &quot;By the Numbers&quot; section of the Reliance Edge documentation.</string>
                 </property>
                 <property name="wordWrap">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="gbTransactionPts_3">
              <property name="title">
               <string>Maximum Volume Size</string>
              </property>
              <layout class="QVBoxLayout" name="verticalLayout_35">
               <item>
                <widget class="QLabel" name="label_45">
                 <property name="text">
                  <string>The maximum volume size at current settings is:</string>
                 </property>
                </widget>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_21">
                 <item>
                  <spacer name="horizontalSpacer_29">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>10</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QLabel" name="lVsizeBytes">
                   <property name="text">
                    <string>0 MB (0 bytes)</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_30">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="QLabel" name="label_48">
                 <property name="text">
                  <string>The maximum volume size is primarily determined by the selected block size. The selected API has a small effect on the maximum volume size as well.</string>
                 </property>
                 <property name="wordWrap">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLabel" name="label_49">
                 <property name="text">
                  <string>For more details, see the &quot;By the Numbers&quot; section of the Reliance Edge documentation.</string>
                 </property>
                 <property name="wordWrap">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <spacer name="verticalSpacer_12">
              <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>370</width>
     <height>27</height>
    </rect>
   </property>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>File</string>
    </property>
    <addaction name="actionSave"/>
    <addaction name="actionLoad"/>
    <addaction name="separator"/>
    <addaction name="actionAbout"/>
   </widget>
   <addaction name="menuFile"/>
  </widget>
  <action name="actionSave">
   <property name="text">
    <string>Save...</string>
   </property>
  </action>
  <action name="actionLoad">
   <property name="text">
    <string>Load...</string>
   </property>
  </action>
  <action name="actionAbout">
   <property name="text">
    <string>About...</string>
   </property>
  </action>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <customwidgets>
  <customwidget>
   <class>WarningBtn</class>
   <extends>QWidget</extends>
   <header>warningbtn.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
